#!/bin/sh

# Copy Fortigate configuration with scp and store it with rancid.
#
# Writted by David Schweikert, 2016-11-03
# License: same as rancid version 3 (BSD-style)
#
# Note: for this to work you need to enable scp on the Fortinet device:
#
#    config system global
#       set admin-scp enable
#    end
#
# See also: http://kb.fortinet.com/kb/documentLink.do?externalID=12002

ARG_HOST=$1
ARG_FILE="$ARG_HOST.new"

usage() {
	echo "usage: /usr/local/libexec/rancid/fnrancid-scp hostname" 2>&1
	exit 1
}

# this assumes that:
# 1. the host can be matched without wildcards in the .cloginrc file
# 2. the password is enclosed in curly braces
get_password() {
	PASSWORD=`perl -ne "/^add\\s+password\\s+\\Q$1\\E\\s+{(.*)}\\s*{(.*)}$/ and print \"\\\$1\"" $HOME/.cloginrc`
}

get_user() {
	USERNAME=`perl -ne "/^add\\s+user\\s+\\Q$1\\E\\s+(.*)/ and print \"\\\$1\"" $HOME/.cloginrc`
}

if [ -z "$ARG_HOST" ]; then
	usage
fi

get_password $ARG_HOST
get_user $ARG_HOST

expect -c "
   set timeout 10
   spawn scp -O $USERNAME@$ARG_HOST:fgt-config $ARG_FILE
   expect password: { send \"$PASSWORD\n\" }
   expect eof
"

if [ -r "${ARG_FILE}" ]; then
    sed -E -i \
        -e 's/^(.*) ENC .*$/\1 ENC <removed>/g' \
        -e '/^.*set private-key.*$/,/^-----END ENCRYPTED PRIVATE KEY-----".*$/{/set private-key/ s/^(.*set private-key).*/\1 "<removed>"/; t; d}' \
        -e '/^.*set certificate.*$/,/^-----END CERTIFICATE-----".*$/{/set certificate/ s/^(.*set certificate).*/\1 "<removed>"/; t; d}' \
        "${ARG_FILE}"
fi
